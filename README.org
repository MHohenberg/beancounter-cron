* beancounter-cron

This is a subsystem inteded to work with beancount to automatically add
standing orders to your beancount file. 

** Why?

To avoid having to enter monthly payments over and over again


** Limitations and out of scope

- beancount-cron does not read anything from your actual beancount-file - that means
  that if you use currency symbols or accounts that are not yet inexistance, your
  beancount-file might become corrupt - nothing a text editor session won't fix, though

- beancount-cron does not currently try to enable automatic complex payments in which more than two accounts are being affected.

- beancount-cron does not strive to achieve more precise payment executions than daily. 
  Frankly, if you need something even more precise, beancount may not be the right software
  for you to begin with ;)

- beancount-cron is designed to run once a day. If you are not starting your computer for 
  some time (and have not screwed around with the config default value of the date_calculation_method), 
  a system outage of any time period will solve itself quickly, though. 

* Configuration

beancount-cron expects the following files to be present:

| Filename                 | Description                                   |
|--------------------------+-----------------------------------------------|
| ~/.beancount-cron/config | the basic config file                         |
| ~/.beancount-cron/cron   | the file that describes the diverse cronfiles |
| ~/.beancount-cron/bcfile | a symlink to your beancount-file              |

beancount-cron will also create backups in ~/.beancount-cron/backups for up to 30 days (unless otherwise specified in the config files)

** config

| key                     | values                     | default                   | explanation                                                                                                                                        |
|-------------------------+----------------------------+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------|
| accounting_method       | catchall, exact            | catchall                  | if exact, both lines will have corresponding values attached to them.                                                                              |
| backup_enabled          | yes,no                     | yes                       | if yes, backups of the files will be kept                                                                                                          |
| backup_autoclean        | int value                  | 30                        | number of days for which backups will be kept.                                                                                                     |
| backup_directory        | path                       | ~/.beancount-cron/backups | Directory where backups are being stored                                                                                                           |
| date_calculation_method | from-startDate, from-today | from-startDate            | if a date in the cronfile is far in the past, which date is the next date: the next that would have naturally occurred or the next one from today? |
| log_level               | int value (0-5)            | 0                         | Loglevel. Higher number = more log messages. 0=disable logging                                                                                     |
| log_file                | path + filename            | ~/.beancount-cron/log     | filename of the logfile.                                                                                                                           |

** cron

*** Basic format

Every line is a cron entry. Such an entry may look like this:

    2019-01-01 monthly 450.00 EUR Assets:BankAccount Expenses:Rent * "Landlord"
    2019-01-15 2weekly 2200.00 EUR Income:Salary Assets:BankAccount * "Employer Inc."
    2019-02-01 once 12.00 EUR Assets:Cash Expenses:BusPass * "Foreign Town"

The first line sets up a monthly payment, to the first of every month, of 450 Euro from 
the Account Assets:BankAccount to the Account Expenses:Rent. The next payment will be 
the on the 1st of January, 2019

The second line sets up a payment from your employer to your Assets:BankAccount every 
other week, the next payment will happen on the  15th of January, 2019

On the first of February, you plan to pay a one-time payment of 12 Euro to a Foreign town for a buss pass

*** Designators

| Designator | Explanation                                                                                  |
|------------+----------------------------------------------------------------------------------------------|
| once       | exactly once. Entry will be deleted after it has been executed.                              |
| daily      | every day                                                                                    |
| weekly     | every week on that workday                                                                   |
| monthly    | every calendar month on that day (if the day does not exist, use the day immediately before) |
| yearly     | every calendar year on that day (if the day does not exist, use the day immediately before)  |

You can modify this by adding a digit (e.g. 4daily = every four days)
*** About the mechanism

Be aware that the cron file, unlike the cron files of the cron subsystem, 
changes over time and gets updated with the next day a payment is expected
to occur. 


* License

Copyright (C) 2018 Martin Hohenberg <me@martinhohenberg.de>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
